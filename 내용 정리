----------------------------------------------
11장 JSP 정의와 구성 요소
----------------------------------------------

11.1 JSP 등장 배경

■ 서블릿으로 화면 구현시 문제점
- 웹 프로그램의 화면 기능이 복잡해지므로 서블릿의 자바 기반으로 화면 기능 구현시 어려움이 발생함
- 디자이너 입장에서 화면 구현 시 자바 코드로 인해 작업이 어려워함
- 서블릿에 비즈니스 로직이 화면 기능이 같이 있다 보니 개발 후 유지관리가 불편함

해결책
- 서블릿의 비즈니스 로직과 결과를 보여주는 화면 기능을 분리
- 비즈니스 로직과 화면을 분리함으로써 개발자는 비즈니스 로직 구현에 집중하고,
디자이너는 화면 기능 구현에만 집중할 수 있다.
- 개발 후 재사용과 유지관리가 훨씬 수월해 진다.


■ JSP 구성 요소

- HTML 태그, CSS 태그, 자바스크립트 코드
- JSP 기본 태그
- JSP 액션 태그
- 개발자가 직접 만들거나 프레임워크에서 제공하는 커스텀(custom)태그

----------------------------------------------

11.2 JSP 3단계 작업 과정

1. 변환 단계
    : 컨테이너는 JSP파일을 자바 파일로 변환
2. 컴파일 단계
    : 컨테이너는 변환된 자바파일을 클래스 파일로 컴파일한다.
3. 실행 단계
    : 컨테이너는 class 파일을 실행하여 그 결과(HTML, CSS와 자바스크립트 코드)를 브라우저에 전송 출력.

----------------------------------------------

11.3 JSP 페이지 구성 요소

■ JSP 페이지 구성 요소
- 디렉티브 태그
- 스크립트 요소
- 표현언어
- 내장 객체
- 액션 태그
- 커스텀 태그

----------------------------------------------

11.4 디렉티브 태그

- 페이지 디렉티브 태그
 : JSP 페이지 전반적인 정보를 설정할 때 사용
- 인클루드 디렉티브 태그
 : 공통으로 사용하는 JSP 페이지를 다른 JSP 페이지에 추가할 때 사용
- 태그라이브 디렉티브 태그
 : 개발자나 프레임워크에서 제공하는 태그를 사용할 때 사용

■ 인클루드 디렉트비 특징
- 재사용성이 높다
- JSP 페이지의 유지관리가 쉽다.

인클루드 디렉티브 태그 설정
    <%@ include file = "공통기능.jsp"%>

----------------------------------------------
